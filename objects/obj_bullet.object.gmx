<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bullet_speed=1000;
bullet_xspeed=0;
damage = 60;
glow = instance_create(x,y,obj_glow);
glow.parent = self;
glow.image_blend = image_blend;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y+=-bullet_speed*global.dt;
x+=bullet_xspeed*global.dt;
if(glow.image_blend != image_blend){
glow.image_blend = image_blend;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteroid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.hp += -damage;
explosion = instance_create(x,y,obj_explosion);
explosion.y_speed = other.y_speed;
explosion.x_speed = other.x_speed;
explosion.image_blend = image_blend;
if(other.hp &lt;= 0) {
    score+= 250*other.image_xscale*global.speed_bonus;
    for(i = 0; i &lt; other.asteroid_spawn; i++) {
        asteroid = instance_create(other.x,other.y,obj_asteroid);
        asteroid.image_xscale = other.asteroid_spawn_scale;
        asteroid.image_yscale = asteroid.image_xscale;
        asteroid.hp = 100*(asteroid.image_xscale/0.25);
        asteroid.asteroid_spawn = round(asteroid.hp/100);
        if(asteroid.hp &gt;= 200) 
            asteroid.asteroid_spawn = 2;
        else asteroid.asteroid_spawn = 0;
        asteroid.asteroid_spawn_scale = asteroid.image_xscale-0.25;
        asteroid.y_speed = other.y_speed*random_range(0.5,0.75);
        asteroid.rotation = random_range(-45,45)*(0.25/asteroid.image_xscale);
        asteroid.x_speed = random_range(-200,200)*(1.5-asteroid.image_xscale);
        
    }/*
    for(i = 0; i &lt; round(25.0*global.particle_density); i++) {
        dust = instance_create(other.x,other.y,obj_dust);
        dust.y_speed = other.y_speed;
        dust.x_speed = other.x_speed;        
        }*/
          
    for(i = 0; i &lt; round(100.0*global.particle_density*other.image_xscale); i++) {
        part_speed = random_range(2,10);
        part_life = random_range(0.8,1.2)/global.dt;
        part_type_life(global.dust_particle,part_life,part_life);
        part_type_size(global.dust_particle,0.01,0.05,0,0);
        part_type_direction(global.dust_particle,0,360,0,0);
        part_type_speed(global.dust_particle,part_speed,part_speed,-(part_speed/part_life)*0.5,0);        
        part_particles_create(global.P_explosion,other.x,other.y,global.dust_particle,1);
    }
    //part_emitter_region(global.P_explosion,global.dust_particle,other.x-other.sprite_width*other.image_xscale/2,other.x+other.sprite_width*other.image_xscale/2,other.y-other.sprite_height*other.image_yscale/2,other.y+other.sprite_height*other.image_yscale/2,ps_shape_ellipse,ps_distr_gaussian);
    //part_emitter_burst(global.P_explosion,global.dust_emitter,global.dust_particle,50*global.particle_density);

    if(other.asteroid_spawn == 0 &amp;&amp;random_range(0,1) &gt; 0.95) {
        switch(round(random_range(0,2))) {
        case 2:
            instance_create(other.x,other.y,obj_puD);
            break;
        case 1: 
            instance_create(other.x,other.y,obj_puT);        
            break;
        case 0:
            instance_create(other.x,other.y,obj_puS);        
            break;
        }
    }
    asteroid_explosion = instance_create(other.x,other.y,obj_explosion);
    asteroid_explosion.y_speed = other.y_speed;
    asteroid_explosion.x_speed = other.x_speed;
    asteroid_explosion.image_blend = other.image_blend;
    asteroid_explosion.image_xscale = (sprite_get_width(spr_asteroid)*other.image_xscale)/sprite_get_width(spr_newExplode)*1.25;
    asteroid_explosion.image_yscale = (sprite_get_height(spr_asteroid)*other.image_yscale)/sprite_get_height(spr_newExplode)*1.25;
    with (other) instance_destroy();
}
chip_amount = round(3*(damage/20)*global.particle_density);

for(i = 0; i &lt; chip_amount; i++){
        part_speed = random_range(8,14);
        part_life = random_range(0.2,0.6)/global.dt;
        part_type_life(global.bullet_particle,part_life,part_life);
        part_type_size(global.bullet_particle,0.01,0.05,0,0);
        part_type_direction(global.bullet_particle,point_direction(other.x,other.y,x,y)-67.5,point_direction(other.x,other.y,x,y)+67.50,0,0);
        part_type_speed(global.bullet_particle,part_speed,part_speed,-(part_speed/part_life)*0.5,0);        
        part_particles_create(global.P_explosion,x,y,global.bullet_particle,1);
}
with (glow) instance_destroy();
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (glow) instance_destroy();
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
