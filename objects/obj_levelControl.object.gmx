<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.dt = delta_time/1000000;
elapsed_time += global.dt;
asteroid_timer += global.dt;
bgstar_timer += global.dt;
bgplanet_timer += global.dt;
if(asteroid_timer &gt; asteroid_interval) {
    asteroid = instance_create(random(room_width),-64,obj_asteroid);
    asteroid.image_xscale = random_range(0.25,0.75);
    asteroid.image_yscale = asteroid.image_xscale;
    asteroid.x_speed = random_range(-50,50)*(1.5-asteroid.image_xscale);

    asteroid.hp = 100*(asteroid.image_xscale/0.25);
    if(asteroid.hp &gt;= 200) 
        asteroid.asteroid_spawn = 2;
    else asteroid.asteroid_spawn = 0;
    asteroid.asteroid_spawn_scale = asteroid.image_xscale-0.25;
    asteroid.y_speed = random_range(150,200)*(1.5-image_xscale);
    asteroid.rotation = random_range(-45,45)*(0.25/asteroid.image_xscale);
    asteroid_timer += -asteroid_interval;
    asteroid_interval = 1*clamp((end_game_time-elapsed_time)/end_game_time,0.2,3)*(250/global.ship_speed);
}
if(bgstar_timer &gt; bgstar_interval) {
    for(i = 0; i &lt; 5; i++){
        instance_create(random(room_width),random_range(-128,-64),obj_bgStar);
        }
    bgstar_timer += -asteroid_interval;
    bggar_interval = 0.01*(250/global.ship_speed);
}

ship_normalx = obj_ship.x/room_width;
view_xview[0] = ship_normalx*(room_width-view_wview[0]);
if(keyboard_check(vk_backspace))
    room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//surface_resize(application_surface, display_get_width(), display_get_height());
display_set_gui_size(window_get_width(),window_get_height());
room_width = window_get_width()*1.12109375;
room_height = window_get_height();
obj_ship.x = room_width/2;
obj_ship.y = room_height/10*8;
view_hview[0] = window_get_height();
view_wview[0] = window_get_width();
global.dt = delta_time/1000000;
score = 0;
elapsed_time = 0;
asteroid_interval = 3;
asteroid_timer = 0;
end_game_time = 300;
bgstar_interval = 0.01;
bgstar_timer = 0;
bgplanet_interval = random_range(0,5);
bgplanet_timer = 0;
for(i = 0; i &lt; 100; i++) {
    instance_create(random(room_width),-100+random(room_height+100),obj_bgStar);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display_set_gui_size(window_get_width(),window_get_height());
room_width = window_get_width()*1.12109375;
room_height = window_get_height();
obj_ship.x = room_width/2;
obj_ship.y = room_height/10*8;
view_hview[0] = window_get_height();
view_wview[0] = window_get_width();
audio_play_sound(Music,10,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>main_cont</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zeros = 10-string_length(string(score));
score_string = "";
room_width = window_get_width()*1.12109375;
room_height = window_get_height();
view_hview[0] = window_get_height();
view_wview[0] = window_get_width();
for(i = 0; i &lt; zeros; i++) {
    score_string = score_string + "0";
}
score_string = score_string + string(score);
draw_text_transformed(view_wview[0]/2,0,score_string,view_wview[0]/512,view_hview[0]/892,0);
if(floor(global.ship_speed/50) &gt; 5) {
    if(floor(global.ship_speed/50) != 10) {
        global.speed_bonus = floor((global.ship_speed-50)/100);
        draw_text_transformed(view_wview[0]/2,32*view_hview[0]/892,"SPEED BONUS " + string(floor((global.ship_speed-50)/100)) + "x",view_wview[0]/512,view_hview[0]/892,0);
        
    }
    else {
        draw_text_transformed(view_wview[0]/2,32*view_hview[0]/892,"TOP SPEED BONUS 10x",view_wview[0]/512,view_hview[0]/892,0);
        global.speed_bonus = 10;
    }
} else {
global.speed_bonus = 1;
}
draw_sprite_ext(spr_speedBar,0,view_wview[0]-32*view_wview[0]/512,view_hview[0]-32*view_hview[0]/892,view_wview[0]/512,view_hview[0]/892,0,c_white,1);
indicator_position = view_hview[0]-32*view_hview[0]/892-sprite_get_height(spr_speedBar)*view_hview[0]/892*(global.ship_speed-150)/350;
draw_sprite_ext(spr_speedIndicator,0,view_wview[0]-32*view_wview[0]/512,indicator_position,view_wview[0]/512,view_hview[0]/892,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
