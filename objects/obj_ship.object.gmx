<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ship_speed = 250;
smooth_poll_count = 4;
thruster_interval = 0.3;
thruster_counter = 0.0;
weapon_powerup_starttime = 30;
weapon_powerup_timer = 0;
shield_powerup_starttime = 15;
shield_powerup_timer = 0;
weapon_type = 0;
fire = false;
z_tilt = 0;
fire_rate = 0.175; //seconds
fire_timer = 0.25;
thruster_flame = instance_create(x,y,obj_thrusterflame);
thruster_flame_glow = instance_create(x,y,obj_thruster_flame_glow);
thruster_flame_glow.parent = thruster_flame;
instance_create(x,y,obj_sight);
instance_create(x,y,obj_timer);
shields_activated = false;
trigun_sights = false;
t_sight1 = undefined;
t_sight2 = undefined;
for(i = 0; i &lt; smooth_poll_count; i++) {
    mouse_x_sample[i] = 0;
    mouse_y_sample[i] = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_pos = mouse_x;
y_pos = mouse_y;
z_tilt = device_get_tilt_z()-z_origin;
thruster_flame.visible = visible;
thruster_flame_glow.visible = visible;
if(visible){
score+=100*global.dt*global.speed_bonus;
mouse_x_sample[smooth_poll_count] = x_pos;
mouse_y_sample[smooth_poll_count] = y_pos;
final_mouse_x = x_pos;
final_mouse_y = y_pos;
for(i = 0; i &lt; smooth_poll_count; i++) {
    mouse_x_sample[i] = mouse_x_sample[i+1];
    mouse_y_sample[i] = mouse_y_sample[i+1];
    final_mouse_x += mouse_x_sample[i];
    final_mouse_y += mouse_y_sample[i];
}
prev_x = x;
prev_y = y;

x = final_mouse_x/(smooth_poll_count+1);
if(os_type == os_android || os_type == os_ios){
    y = final_mouse_y/(smooth_poll_count+1)-(display_get_dpi_y()/display_get_gui_height()*view_hport[0]);
} else {
    y = final_mouse_y/(smooth_poll_count+1);
}

thruster_flame.x = x;
thruster_flame.y = y;
thruster_flame.image_xscale = 1-((global.ship_speed-global.ship_minspeed)/(global.ship_maxspeed-global.ship_minspeed))*0.125;
thruster_flame.image_yscale = 0.85+((global.ship_speed-global.ship_minspeed)/(global.ship_maxspeed-global.ship_minspeed))*0.65;
thruster_flame.image_blend = make_colour_rgb(clamp(638-(255*(global.ship_speed-(global.ship_minspeed-global.ship_minspeed))/(global.ship_maxspeed-global.ship_minspeed)*2),0,255),127+127*(1-(abs(((global.ship_speed-global.ship_minspeed)/(global.ship_maxspeed-global.ship_minspeed))-0.5)*2)),clamp(-127+(255*(global.ship_speed-global.ship_minspeed)/(global.ship_maxspeed-global.ship_minspeed)*2),0,255));
//thruster_flame.image_blend = merge_color(make_color_rgb(255,128,64),make_color_rgb(64,128,255),(global.ship_speed-global.ship_minspeed)/(global.ship_maxspeed-global.ship_minspeed));
thruster_flame_glow.image_blend = thruster_flame.image_blend;
thruster_flame_glow.image_xscale = thruster_flame.image_xscale;
thruster_flame_glow.image_yscale = thruster_flame.image_yscale;

x_delta = abs(x-prev_x);
y_delta = clamp(prev_y-y,0,abs(prev_y-y));
distance_delta = y_delta;//sqrt(sqr(x_delta)+sqr(y_delta));
thruster_counter += (distance_delta*0.25 + 1*(global.ship_speed/global.ship_startspeed))*global.dt;
thruster_counter = clamp(thruster_counter,-2,thruster_interval*2);
if(thruster_counter &gt; thruster_interval) {
    thruster_counter += -thruster_interval;
    thruster = instance_create(x,y,obj_thruster);
    thruster.image_blend = merge_color(thruster_flame.image_blend,make_color_rgb(192,192,192),0.5);
    if(y_delta &gt; 0) thruster.y_extraspeed = y_delta;
}
if(shield_powerup_timer &gt; 0){
    shield_powerup_timer += -global.dt;
}
if(weapon_powerup_timer &gt; 0){
    weapon_powerup_timer += -global.dt;
} else if(weapon_type != 0) {
    if(trigun_sights) {
        trigun_sights = false;
        with(t_sight1) instance_destroy();
        with(t_sight2) instance_destroy();
    }
    weapon_type = 0;
}
if(mouse_wheel_up() || z_tilt &gt; 0.15) {
    global.ship_speed = clamp(global.ship_speed+400*global.dt,global.ship_minspeed,global.ship_maxspeed);
}
if(mouse_wheel_down()) {
    global.ship_speed = clamp(global.ship_speed-400*global.dt,global.ship_minspeed,global.ship_maxspeed);
}

if(keyboard_check(vk_up)) {
   global.ship_speed = clamp(global.ship_speed+400*global.dt,global.ship_minspeed,global.ship_maxspeed);
}
if(keyboard_check(vk_down)) {
   global.ship_speed = clamp(global.ship_speed-400*global.dt,global.ship_minspeed,global.ship_maxspeed);
}

if(z_tilt &lt; -0.15) {
    global.ship_speed = clamp(global.ship_speed+1000*global.dt*-sqr(z_tilt),global.ship_minspeed,global.ship_maxspeed);
}
if(z_tilt &gt; +0.15) {
    global.ship_speed = clamp(global.ship_speed+1000*global.dt*sqr(z_tilt),global.ship_minspeed,global.ship_maxspeed);
}
//x = mouse_x;
//y = mouse_y
if(fire) {
    fire_timer += global.dt;
     if(fire_timer &gt; fire_rate) {
        fire_timer += -fire_rate;
        if(weapon_type == 0) {
            fire_rate = 0.2;
            bullet1 = instance_create(x,y,obj_bullet);
            bullet1.damage = 100;
            bullet1.image_blend = make_colour_rgb(64,255,255);            
        }
        if(weapon_type == 1) {
            fire_rate = 0.25;
            bullet1 = instance_create(x-12,y,obj_bullet);
            bullet2 = instance_create(x+12,y,obj_bullet);
            bullet1.damage = 100;
            bullet2.damage = 100;
            bullet1.image_blend = make_colour_rgb(127,255,64);
            bullet2.image_blend = make_colour_rgb(127,255,64);
        }
        if(weapon_type == 2) {
            fire_rate = 0.1;
            bullet1 = instance_create(x,y,obj_bullet);
            bullet2 = instance_create(x,y,obj_bullet);
            bullet3 = instance_create(x,y,obj_bullet);
            bullet1.damage = 40;
            bullet2.damage = 40;
            bullet3.damage = 40;
            bullet2.image_angle = 22.6;
            bullet3.image_angle = -22.6;
            bullet2.bullet_xspeed = -bullet2.bullet_speed/2;
            bullet3.bullet_xspeed = bullet2.bullet_speed/2;            
            bullet1.image_blend = make_colour_rgb(255,0,0);
            bullet2.image_blend = make_colour_rgb(255,0,0);
            bullet3.image_blend = make_colour_rgb(255,0,0);                    
        }
    }
    fire = false;
}
if(shield_powerup_timer &gt; 0) {
    if(!shields_activated) {
        shields_activated = true;
        shield1 = instance_create(x,y,obj_shield1);
        shield2 = instance_create(x,y,obj_shield2);

        }
    shield1.x = x;
    shield1.y = y;
    shield2.x = x;
    shield2.y = y;    
    }
else if (shields_activated) {
shields_activated = false;
    with (shield1) instance_destroy();
    with (shield2) instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_puS">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other.spinner) instance_destroy();
with (other) instance_destroy();
shield_powerup_timer = shield_powerup_starttime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_puT">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other.spinner) instance_destroy();
with (other) instance_destroy();
weapon_powerup_timer = weapon_powerup_starttime;
weapon_type = 2;
trigun_sights = true;
t_sight1 = instance_create(x,y,obj_sight);
t_sight2 = instance_create(x,y,obj_sight);
t_sight1.image_angle = 25;
t_sight2.image_angle = -25;
t_sight1.image_yscale = 0.75;
t_sight2.image_yscale = 0.75;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_puD">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other.spinner) instance_destroy();
with (other) instance_destroy();
weapon_powerup_timer = weapon_powerup_starttime;
weapon_type = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteroid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(visible &amp;&amp; shield_powerup_timer &lt;= 0) {
    explosion = instance_create(x,y,obj_explosion);
    explosion.image_blend = make_colour_rgb(255,127,0);
    explosion.image_xscale = 2;
    explosion.image_yscale = 2;
    explosion.image_speed = 0.5;
    visible = false;
    with (obj_sight) instance_destroy();
    }
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_x_start = mouse_x;
mouse_y_start = mouse_y;
global.speed_bonus = 1;
global.ship_maxspeed = 600;
global.ship_startspeed = 300;
global.ship_minspeed = 200;
z_origin = device_get_tilt_z();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
